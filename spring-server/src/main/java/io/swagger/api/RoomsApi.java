/**
 * NOTE: This class is auto generated by the swagger code generator program (2.3.1).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.model.Room;
import io.swagger.annotations.*;
import io.swagger.model.Customer;
import io.swagger.model.Reservation;
import java.util.Date;
import org.threeten.bp.LocalDate;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2018-04-16T17:00:26.120Z")

@Api(value = "Rooms", description = "the Rooms API")
public interface RoomsApi {

    
    @ApiOperation(value = "Get the list from all rooms available", nickname = "getRooms", notes = "", response = Room.class, responseContainer = "List", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = Room.class, responseContainer = "List") })
    @RequestMapping(value = "/Rooms", method = RequestMethod.GET)
    ResponseEntity<List<Room>> getRooms();
    
     @ApiOperation(value = "Create a reservation", nickname = "reserveARoom", notes = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK") })
    @RequestMapping(value = "/Rooms/Reservation/Creation", method = RequestMethod.POST)
    ResponseEntity<Reservation> reserveARoom(@RequestBody Reservation reservation);
    
    @ApiOperation(value = "Cancel a reservation", nickname = "cancelARoom", notes = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK") })
    @RequestMapping(value = "/Rooms/Reservation/Cancellation", method = RequestMethod.POST)
    ResponseEntity<Void> cancelARoom(@RequestBody Integer idReservation);

    @ApiOperation(value = "Modify a reservation", nickname = "modificateARoom", notes = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK") })
    @RequestMapping(value = "/Rooms/Reservation/Modification", method = RequestMethod.POST)
    ResponseEntity<Reservation> modifyARoom(@RequestBody Reservation reservation);       

    @ApiOperation(value = "", nickname = "search", notes = "Search base on user criteria input", response = Room.class, responseContainer = "List", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = Room.class, responseContainer = "List") })
    @RequestMapping(value = "/Rooms/Search", method = RequestMethod.GET)
    ResponseEntity<List<Room>> search(@ApiParam(value = "filter by name of city") 
                                      @Valid @RequestParam(value = "city_name", required = false) String cityName,
                                      @ApiParam(value = "filter by number of bedroom") 
                                      @Valid @RequestParam(value = "nm_bedroom", required = false) Integer nmBedroom,
                                      @ApiParam(value = "filter by price prefered") @Valid @RequestParam(value = "price", required = false) Float price);

}
